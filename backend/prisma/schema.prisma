generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  ADMIN
}

enum GroupMemberRole{
  LEADER
  MEMBER
}

model User {
  id             String   @id @default(uuid())
  firstName      String
  lastName       String
  email          String   @unique
  passwordHash   String
  role           UserRole @default(STUDENT)
  githubUsername String?
  linkedInUrl    String?
  XUrl           String?
  PeerlistUrl    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollments Enrollment[]
  group Group[]
  member GroupMember[]
}

model Cohort {
  id       String     @id
  name     String
  isActive Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollments Enrollment[]
  groups Group[]
  
}

model Group {
  id           String  @id @default(uuid())
  name         String
  cohortId String
  leaderId String
  isActive     Boolean
  isRecruiting Boolean

  members GroupMember[]

  cohort Cohort @relation(fields: [cohortId], references: [id])
  leader User @relation(fields: [leaderId], references: [id])
}

model Enrollment{
  userId String
  cohortId String

  @@id([userId, cohortId])

  user User @relation(fields: [userId], references: [id])
  cohort Cohort @relation(fields: [cohortId], references: [id])

}

model GroupMember{
  id String @id
  groupId String
  userId String
  role GroupMemberRole @default(MEMBER)

  group Group @relation(fields: [groupId], references: [id])
  user User @relation(fields: [userId], references: [id])

}